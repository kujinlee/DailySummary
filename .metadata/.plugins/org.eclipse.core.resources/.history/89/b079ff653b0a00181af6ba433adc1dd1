package com.nyansa.interview;

import java.io.File;
import java.io.FileNotFoundException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;

public class DailySummary {
	
	class Visit {
		long time;
		String link;
		Visit(long time, String link) {
			this.time = time;
			this.link = link;
		}
	}

	public static void main(String[] args) {
		if (args.length != 1) {
			System.out.println("Usage: DailySummary <data file path>");
			return;
		}
		String fileName = args[0];
		String patternDisplay = "MM/dd/yyyy";
		String patternSort = "yyyyMMdd";
		SimpleDateFormat dateDisplay = new SimpleDateFormat(patternDisplay);
		dateDisplay.setTimeZone(java.util.TimeZone.getTimeZone("GMT"));
		SimpleDateFormat dateSort = new SimpleDateFormat(patternSort);
		dateSort.setTimeZone(java.util.TimeZone.getTimeZone("GMT"));
		
		//Map<String, Long> linkVisitMap = new TreeMap<String, Long> ();
		Map<String,Map<String, Long>> dateLinkMap = new TreeMap<String,Map<String, Long>>();
		
		DailySummary ds = new DailySummary();

		try {
			File file = new File(fileName);
			Scanner scanner = new Scanner(file);
			while (scanner.hasNextLine()) {
				String line = scanner.nextLine();
				System.out.println(line);
				String[] parsedLine = line.split("\\|");
				String timeStampS = parsedLine[0];
				long timeStamp = Long.parseLong(timeStampS);
				String link = parsedLine[1];
				Visit visit = ds.new Visit(timeStamp, link);
				
				Date time = new Date((long)timeStamp*1000);
				String dateToSort = dateSort.format(time);
				String dateToDisplay = dateDisplay.format(time);
				
				Map<String, Long> linkVisitMap = null;
				if (dateLinkMap.containsKey(dateToSort)) {
					// date alreay in the dateLinkMap
					linkVisitMap = dateLinkMap.get(dateToSort); // get the linkVisit map for the given date
					if (linkVisitMap.containsKey(link)) {
						// link is already in the map, increment visit count
						long cnt = linkVisitMap.get(link);
						linkVisitMap.put(link, cnt+1);
					} else {
						linkVisitMap.put(link, 1L);
					}
				} else {
					// first link visit entry for the date, add new linkVisitMap for the date
					linkVisitMap = new TreeMap<String, Long>();
					linkVisitMap.put(link, 1L);
					dateLinkMap.put(dateToSort, linkVisitMap);
				}
			}
			scanner.close();
			
			// print for the given format
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

}
